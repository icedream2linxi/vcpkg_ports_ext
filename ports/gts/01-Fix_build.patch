diff -ru tt/src/makefile.msc gts-0.7.6/src/makefile.msc
--- tt/src/makefile.msc	2005-01-19 12:47:06.000000000 +0800
+++ gts-0.7.6/src/makefile.msc	2017-06-08 14:46:46.259007800 +0800
@@ -11,7 +11,7 @@
 # Nothing much configurable below
 
 # No general LDFLAGS needed
-LDFLAGS = /link
+LDFLAGS = $(LDFLAGS) /link
 INSTALL = copy
 CP = copy
 RM = del
@@ -19,7 +19,11 @@
 
 GTS_VER = 0.7
 
-CFLAGS = -I. -DHAVE_CONFIG_H -G5 -GF -Ox -W3 -MD -nologo
+!IF "$(CFLAGS)" == ""
+CFLAGS = -MD -Ox
+!ENDIF
+
+CFLAGS = $(CFLAGS) -I. -DHAVE_CONFIG_H -GF -W3 -nologo
 
 all : \
 	config.h \
@@ -61,16 +65,17 @@
 	pgraph.obj \
 	partition.obj \
 	isotetra.obj \
-	curvature.obj
+	curvature.obj \
+	tribox3.obj
 
 gts-$(GTS_VER).dll : $(gts_OBJECTS) gts.def
-	$(CC) $(CFLAGS) -LD -Fegts-$(GTS_VER).dll $(gts_OBJECTS) glib-1.3.lib user32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:gts.def
+	$(CC) $(CFLAGS) -LD -Fegts-$(GTS_VER).dll $(gts_OBJECTS) glib-2.0.lib user32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:gts.def
 
 config.h: config.h.win32
 	$(CP) config.h.win32 config.h
 
 predicates.obj: predicates.c predicates_init.h predicates.h
-	$(CC) $(CFLAGS) -GD -c -DGTS_COMPILATION -DG_LOG_DOMAIN=\"Gts\" predicates.c
+	$(CC) $(CFLAGS) -c -DGTS_COMPILATION -DG_LOG_DOMAIN=\"Gts\" predicates.c
 
 predicates_init.h: predicates_init
 	predicates_init > predicates_init.h
@@ -79,7 +84,7 @@
 	$(CC) $(CFLAGS) predicates_init.c -o predicates_init
 
 .c.obj:
-	$(CC) $(CFLAGS) -GD -c -DGTS_COMPILATION -DG_LOG_DOMAIN=\"Gts\" $<
+	$(CC) $(CFLAGS) -c -DGTS_COMPILATION -DG_LOG_DOMAIN=\"Gts\" $<
 
 clean:
 	$(RM) config.h
@@ -94,3 +99,4 @@
 	$(RM) *.mk1
 	$(RM) *.pdb
 	$(RM) *.ilk
+	$(RM) *.exe
Only in gts-0.7.6/src: predicates_init.h
diff -ru tt/src/rounding.h gts-0.7.6/src/rounding.h
--- tt/src/rounding.h	2006-03-10 07:40:08.000000000 +0800
+++ gts-0.7.6/src/rounding.h	2017-06-08 14:46:05.820393500 +0800
@@ -49,11 +49,16 @@
 #  else /* not __FreeBSD__ */
 #    ifdef WIN32
 #      ifdef _MSC_VER
+#ifdef _WIN64
+#        define FPU_ROUND_DOUBLE
+#        define FPU_RESTORE
+#else
 #        include <float.h>
          static unsigned int fpu_init;
 #        define FPU_ROUND_DOUBLE (fpu_init = _controlfp (0, 0),\
                                  _controlfp (_PC_53, MCW_PC))
 #        define FPU_RESTORE      (_controlfp (fpu_init, 0xfffff))
+#endif
 #      elif __MINGW32__
 #        include <float.h>
          static unsigned int fpu_init;
